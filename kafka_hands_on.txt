
zookeeper

d:\kafka\bin\windows>zookeeper-server-start.bat ..\..\config\zookeeper.properties


kafka server

D:\kafka\bin\windows>kafka-server-start.bat ..\..\config\server.properties

D:\kafka\bin\windows>set KAFKA_OPTS=-Djava.security.auth.login.config=D:\kafka\config\jaas-config.properties
then run server using secure-server prop file


in java run pass this argument
-Djava.security.auth.login.config=client-jaas.properties

create topic

D:\kafka\bin\windows>kafka-topics.bat --create --topic first-topic --zookeeper localhost:2181 --partitions 1 --replication-factor 1
Created topic first-topic.

topic partition
D:\kafka\bin\windows>kafka-topics.bat --create --topic second-topic --zookeeper localhost:2181 --partitions 2 --replication-factor 1
Created topic second-topic.

D:\kafka\bin\windows>kafka-topics.bat --create --topic third-topic --zookeeper localhost:2181 --partitions 3 --replication-factor 1
Created topic third-topic.

kafka-topics.bat --create --topic fourth-topic --zookeeper localhost:2181 --partitions 3 --replication-factor 1
Created topic fourth-topic.

kafka-topics.bat --create --topic fifth-topic --zookeeper localhost:2181 --partitions 4 --replication-factor 1
Created topic fifth-topic.

kafka-topics.bat --create --topic sixth-topic --zookeeper localhost:2181 --partitions 4 --replication-factor 1

kafka-topics.bat --create --topic test-cluster --zookeeper localhost:2181 --partitions 4 --replication-factor 2

-- to describe topic & its info

kafka-topics.bat --describe --topic test-cluster --zookeeper localhost:2181

D:\kafka\bin\windows>kafka-topics.bat --create --topic first-topic --zookeeper localhost:2181 --partitions 4 --replication-factor 2
Error while executing topic command : Topic 'first-topic' already exists.
[2019-04-04 14:32:30,758] ERROR org.apache.kafka.common.errors.TopicExistsException: Topic 'first-topic' already exists.
 (kafka.admin.TopicCommand$)

# we can only alter to increase number of partitions
# We can't decrease partitions, and neither change replication factor

kafka-topics.bat --alter --topic test-cluster --zookeeper localhost:2181 --partitions 5 --replication-factor 2

kafka-topics.bat --create --topic demo-cluster --zookeeper localhost:2181 --partitions 5 --replication-factor 3


kafka consumer

D:\kafka\bin\windows>kafka-console-consumer.bat
 --topic first-topic --bootstrap-server localhost:9092

D:\kafka\bin\windows>kafka-console-consumer.bat --topic first-topic --bootstrap-server localhost:9092 --consumer-property group.id=test-group

kafka producer

D:\kafka\bin\windows>kafka-console-producer.bat --topic first-topic --broker-list localhost:9092


again get msgs from beginning or if you started producer first before consumer

D:\kafka\bin\windows>kafka-console-consumer.bat --topic first-topic --bootstrap-server localhost:9092 --from-beginning


Kakfka file connector run & test

run
D:\kafka\bin\windows>connect-standalone.bat ..\..\config\connect-standalone.properties ..\..\config\connect-file-source.properties

test

D:\kafka\bin\windows>kafka-console-consumer.bat --topic sixth-topic --bootstrap-server localhost:9092 --from-beginning
{"schema":{"type":"string","optional":false},"payload":"hello"}
{"schema":{"type":"string","optional":false},"payload":"this is test file."}


run with sink
D:\kafka\bin\windows>connect-standalone.bat ..\..\config\connect-standalone.properties ..\..\config\connect-file-source.properties ..\..\config\connect-file-sink.properties


Linux box pd

u: kafka
p: redhat

oracle db pd
p: redhat


start confluent as

sudo ./confluent start

sudo ./confluent status

sudo ./confluent stop

SQL> connect sys/redhat as sysdba
Connected.

SQL> create user kafka identified by redhat;

User created.

SQL> grant connect, resource, dba to kafka;

Grant succeeded.

SQL> connect kafka/redhat;
Connected.

SQL> create table employee(
    emp_id integer,
    emp_name varchar2(20),
    designation varchar2(20),
    primary key(emp_id));

Table created.

SQL> describe employee;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 EMP_ID                                    NOT NULL NUMBER(38)
 EMP_NAME                                           VARCHAR2(20)
 DESIGNATION                                        VARCHAR2(20)
 

SQL> select * from global_name;
 
SQL> select * from sys.all_users;


CREATE SEQUENCE emp_seq START WITH 1 INCREMENT BY 1;
 
CREATE OR REPLACE TRIGGER emp_seq_tr
 BEFORE INSERT or update ON employee FOR EACH ROW
BEGIN
  SELECT emp_seq.NEXTVAL INTO :NEW.emp_id FROM DUAL;
 
END;
/

SQL> insert into employee (emp_name, designation) values ('Arvind Reddy', 'Developer');

1 row created.

SQL> insert into employee (emp_name, designation) values ('Ravi Verma', 'Accountant');

1 row created.

SQL> select * from employee;

    EMP_ID EMP_NAME             DESIGNATION
---------- -------------------- --------------------
         1 Arvind Reddy         Developer
         2 Ravi Verma           Accountant


-- ----------------------------------------------------------

commit;

SQL> update employee
  2  set designation='SE'
  3  where emp_id = 5;

1 row updated.

SQL> commit;

Commit complete.

SQL> select * from employee;

    EMP_ID EMP_NAME             DESIGNATION
---------- -------------------- --------------------
         1 Arvind Reddy         Developer
         2 Ravi Verma           Accountant
         3 Booby Ganesan        Accountant
         4 Baba Ramdev          Baba
         7 Amit Shah            SE
         6 Vijay Sharma         Architect

6 rows selected.

-- --------------------

for sink connector --







